{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spiner/Spiner.js","components/error/error.gif","components/error/Error.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charContent/CharContent.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","MarvelService","constructor","_this","_PATH","_PUBLIC_API_KEY","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_getCharacterData","getCharacterData","this","id","name","decription","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spiner","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","d","fill","stroke","attributeName","type","dur","repeatCount","keyTimes","values","ErrorImg","src","img","alt","RandomChar","Component","state","char","loaded","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateCharacter","Math","floor","random","then","catch","componentDidMount","componentDidUpdate","componentWillUnmount","render","errorItem","loadedItem","content","View","onClick","mjolnir","_ref","styleObjFit","CharList","list","charEnded","newItemsLoading","refList","setRefList","elem","push","onCharFocus","index","forEach","item","focus","onListLoaded","newList","onListLoading","renderList","ref","tabIndex","props","onSelectedChar","onKeyUp","e","key","refreshingList","listItems","disabled","Skeleton","_Fragment","CharInfo","updateChar","selectedCharID","prevProps","skeleton","comicsContent","i","CharContent","App","decoration","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0903449b.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\nexport default class MarvelService {\r\n\t_PATH = 'https://gateway.marvel.com:443/v1/public/'\r\n\t_PUBLIC_API_KEY = 'apikey=d1464a3d250445e9bfda5939ce0a2d1c'\r\n\t_baseOffset = 0\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst res = await fetch(url);\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n\t\t}\r\n\r\n\t\treturn await res.json()\r\n\t}\r\n\r\n\tgetAllCharacters = async (offset = this._baseOffset) => {\r\n\t\tconst res = await this.getResource(`${this._PATH}characters?limit=9&offset=${offset}&${this._PUBLIC_API_KEY}`)\r\n\t\treturn res.data.results.map(this._getCharacterData); // ...map(item => this._getCharacterData(item))\r\n\t}\r\n\r\n\tgetCharacterData = async (id) => {\r\n\t\tconst res = await this.getResource(`${this._PATH}characters/${id}?${this._PUBLIC_API_KEY}`);\r\n\t\treturn this._getCharacterData(res.data.results[0])\r\n\t}\r\n\r\n\t_getCharacterData = (res) => {\r\n\t\treturn {\r\n\t\t\tname: res.name,\r\n\t\t\tdecription: res.decription,\r\n\t\t\tthumbnail: `${res.thumbnail.path}.${res.thumbnail.extension}`,\r\n\t\t\thomepage: res.urls[0].url,\r\n\t\t\twiki: res.urls[1].url,\r\n\t\t\tid: res.id,\r\n\t\t\tcomics: res.comics.items\r\n\t  }\r\n\t}\r\n}","\t\t\t// <!-- <?xml version=\"1.0\" encoding=\"utf-8\"?> -->\r\n\t\t\t// <!-- [ldio] generated by https://loading.io/ -->\r\nimport './spiner.scss';\r\n\r\nconst Spiner = () => {\r\n\treturn (\r\n\t\t<div className=\"spiner_wrapper\">\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" style={{margin: 'auto', background: 'rgb(255, 255, 255)', display: 'block', shapeRendering: 'auto'}}\r\n\t\t\t\twidth=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n\t\t\t\t<path d=\"M30 50A20 20 0 0 0 70 50A20 22 0 0 1 30 50\" fill=\"#2a2826\" stroke=\"none\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51;360 50 51\"></animateTransform>\r\n\t\t\t\t</path>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spiner","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './error.scss';\r\n\r\nconst ErrorImg = () => {\r\n\treturn (\r\n\t\t<div className=\"error_wrapper\">\r\n\t\t\t<img src={img} alt=\"Error\"/>\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default ErrorImg;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spiner from '../spiner/Spiner';\nimport ErrorImg from '../error/Error';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {\n            name: null,\n            decription: null,\n            thumbnail: null,\n            homepage: null,\n            wiki: null\n        },\n        loaded: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharacter()\n    }\n\n    componentDidUpdate() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    onCharLoaded = (char) => {\n        return this.setState({char, loaded: true});\n    }\n\n    onCharLoading = () => {\n        return this.setState({loaded: false});\n    }\n\n    onError = () => {\n        this.setState({loaded: true, error: true});\n    }\n\n    updateCharacter = () => {\n        this.onCharLoading();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1010900);\n\n        this.marvelService.getCharacterData(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n\n    render() {\n        const {char, loaded, error} = this.state;\n\n        const errorItem = error ? <ErrorImg/> : null;\n        const loadedItem = !loaded ? <Spiner/> : null;\n        const content = !(error || !loaded) ? <View char={char}/> : null;\n\n\n        return (\n            <div className=\"randomchar\">\n                {errorItem}\n                {loadedItem}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateCharacter}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, decription, thumbnail, homepage, wiki} = char;\n    const styleObjFit = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? 'contain' : 'cover';\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{'objectFit': `${styleObjFit}`}}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{decription ? decription : 'No decription :('}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport React, { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorImg from '../error/Error';\nimport Spiner from '../spiner/Spiner';\nimport PropTypes from 'prop-types';\n\nclass CharList extends Component {\n    state = {\n        list: [],\n        loaded: false,\n        error: false,\n        offset: 210,\n        charEnded: false,\n        newItemsLoading: false\n    }\n\n    refList = [];\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.marvelService.getAllCharacters().then(this.onListLoaded).catch(this.onError)\n    }\n\n    setRefList = elem => {\n        this.refList.push(elem)\n    }\n\n    onCharFocus = index => {\n        this.refList.forEach(item => item.className = 'char__item')\n        this.refList[index].className = 'char__item char__item_selected'\n        this.refList[index].focus()\n    }\n\n    onListLoaded = (newList) => {\n\n        if (newList.length < 9) {\n            this.setState({ charEnded: true })\n        }\n\n        this.setState(({list, offset}) => ({\n            list: [...list, ...newList],\n            loaded: true,\n            offset: offset + 9,\n            newItemsLoading: false\n        }))\n    }\n\n    onError = () => {\n        this.setState({loaded: true, error: true});\n    }\n\n    onListLoading = () => {\n        this.setState({newItemsLoading: true})\n    }\n\n    renderList = (list) => {\n        if (!list) {\n            return\n        }\n\n        const items = list.map((item, index) => {\n            return (\n                <li className=\"char__item\" ref={this.setRefList} key={item.id}\n                    tabIndex={0}\n                    onClick={() => {\n                        this.props.onSelectedChar(item.id)\n                        this.onCharFocus(index)\n                    }}\n                    onKeyUp={e => {\n                        if (e.key === 'Enter') {\n                            this.props.onSelectedChar(item.id)\n                            this.onCharFocus(index)\n                        }\n                    }}\n                >\n                    <img src={item.thumbnail} alt={item.name}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    refreshingList = (offset) => {\n        this.onListLoading()\n        this.marvelService.getAllCharacters(offset).then(this.onListLoaded).catch(this.onError)\n    }\n\n\n    render() {\n        const { list, loaded, error, offset, charEnded, newItemsLoading } = this.state;\n\n        const items = this.renderList(list);\n\n        const errorItem = error ? <ErrorImg/> : null;\n        const loadedItem = !loaded ? <Spiner/> : null;\n        const listItems = !(error || !loaded) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorItem}\n                {loadedItem}\n                {listItems}\n                <button className=\"button button__main button__long\"\n                    onClick={() => this.refreshingList(offset)}\n                    disabled={ newItemsLoading }\n                    style={{display: charEnded ? 'none' : 'block'}}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\n\nCharList.propTypes = {\n    onSelectedChar: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport { number } from 'prop-types';\n\nimport './charInfo.scss';\n\nimport MarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport ErrorImg from '../error/Error';\nimport Spiner from '../spiner/Spiner';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loaded: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.selectedCharID !== prevProps.selectedCharID) {\n            this.updateChar();\n        }\n    }\n\n    onCharLoaded = (char) => {\n        return this.setState({char, loaded: true});\n    }\n\n    onCharLoading = () => {\n        return this.setState({loaded: false});\n    }\n\n    onError = () => {\n        this.setState({loaded: true, error: true});\n    }\n\n    updateChar = () => {\n        const { selectedCharID } = this.props;\n        if (!selectedCharID) {\n            return\n        }\n\n        this.onCharLoading();\n        this.marvelService.getCharacterData(selectedCharID)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n\n        const { char, loaded, error } = this.state;\n\n        const skeleton = char || !loaded || error ? null : <Skeleton/>\n        const errorItem = error ? <ErrorImg/> : null;\n        const loadedItem = !loaded ? <Spiner/> : null;\n        const content = !(error || !loaded || !char) ? <View char={ char }/> : null;\n\n        return (\n            <div className=\"char__info\">\n                { skeleton }\n                { errorItem }\n                { loadedItem }\n                { content }\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const { name, decription, thumbnail, homepage, wiki, comics } = char;\n    const styleObjFit = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? 'contain' : 'cover';\n\n    const comicsContent = (function createContent(comics) {\n        if (!comics.length) {\n            return \"There is no comics with this character\"\n        }\n\n        const content = [];\n\n        for (let i = 0; i < comics.length; i++) {\n            if (i === 10) {\n                break;\n            }\n\n            content.push((\n                <li key={ i } className=\"char__comics-item\">\n                    { comics[i].name }\n                </li>\n            ))\n        }\n\n        return content\n    })(comics)\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={ thumbnail } alt={ name } style={{'objectFit': `${styleObjFit}`}}/>\n                <div>\n                    <div className=\"char__info-name\">{ name }</div>\n                    <div className=\"char__btns\">\n                        <a href={ homepage } className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={ wiki } className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {decription ? decription : 'No decription :('}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                { comicsContent }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    selectedCharID: number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\n\r\nclass CharContent extends Component {\r\n\tstate = {\r\n\t\tselectedCharID: null,\r\n\t}\r\n\r\n\tonSelectedChar = (id) => {\r\n\t\tthis.setState({selectedCharID: id})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<CharList onSelectedChar={this.onSelectedChar}/>\r\n\t\t\t\t<CharInfo selectedCharID={this.state.selectedCharID}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CharContent;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharContent from \"../charContent/CharContent\";\n\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <RandomChar/>\n                <CharContent/>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}